{
  "info": {
    "description": "This OpenAPI specification is automatically generated by Hasura.",
    "title": "Rest Endpoints",
    "version": ""
  },
  "paths": {
    "/api/rest/assignment_titles": {
      "get": {
        "summary": "assignment_titles",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery assignment_titles {\n  assignment_titles {\n    assignment_title_id\n    name\n    short_name\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "assignment_titles": {
                      "items": {
                        "description": "columns and relationships of \"assignment_titles\"",
                        "nullable": false,
                        "properties": {
                          "assignment_title_id": {
                            "nullable": false,
                            "title": "Int",
                            "type": "integer"
                          },
                          "name": {
                            "nullable": false,
                            "title": "String",
                            "type": "string"
                          },
                          "short_name": {
                            "nullable": false,
                            "title": "String",
                            "type": "string"
                          }
                        },
                        "title": "assignment_titles",
                        "type": "object"
                      },
                      "nullable": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/assignment_titles"
          }
        }
      },
      "post": {
        "summary": "insert_assignment_titles_one",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation insert_assignment_titles_one($object: assignment_titles_insert_input!) {\n  insert_assignment_titles_one(object: $object) {\n    assignment_title_id\n    name\n    short_name\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "object": {
                    "$ref": "#/components/schemas/assignment_titles_insert_input!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "insert_assignment_titles_one": {
                      "description": "columns and relationships of \"assignment_titles\"",
                      "nullable": true,
                      "properties": {
                        "assignment_title_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "short_name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        }
                      },
                      "title": "assignment_titles",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/assignment_titles"
          }
        }
      }
    },
    "/api/rest/assignment_titles/{assignment_title_id}": {
      "get": {
        "summary": "assignment_titles_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery assignment_titles_by_pk($assignment_title_id: Int!) {\n  assignment_titles_by_pk(assignment_title_id: $assignment_title_id) {\n    assignment_title_id\n    name\n    short_name\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"assignment_title_id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "assignment_title_id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "assignment_title_id": {
                    "nullable": false,
                    "title": "Int",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "assignment_titles_by_pk": {
                      "description": "columns and relationships of \"assignment_titles\"",
                      "nullable": true,
                      "properties": {
                        "assignment_title_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "short_name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        }
                      },
                      "title": "assignment_titles",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/assignment_titles/{assignment_title_id}"
          }
        }
      },
      "post": {
        "summary": "update_assignment_titles_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation update_assignment_titles_by_pk($assignment_title_id: Int!, $object: assignment_titles_set_input!) {\n  update_assignment_titles_by_pk(\n    pk_columns: {assignment_title_id: $assignment_title_id}\n    _set: $object\n  ) {\n    assignment_title_id\n    name\n    short_name\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"assignment_title_id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "assignment_title_id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "assignment_title_id": {
                    "nullable": false,
                    "title": "Int",
                    "type": "integer"
                  },
                  "object": {
                    "$ref": "#/components/schemas/assignment_titles_set_input!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "update_assignment_titles_by_pk": {
                      "description": "columns and relationships of \"assignment_titles\"",
                      "nullable": true,
                      "properties": {
                        "assignment_title_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "short_name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        }
                      },
                      "title": "assignment_titles",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/assignment_titles/{assignment_title_id}"
          }
        }
      },
      "delete": {
        "summary": "delete_assignment_titles_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation delete_assignment_titles_by_pk($assignment_title_id: Int!) {\n  delete_assignment_titles_by_pk(assignment_title_id: $assignment_title_id) {\n    assignment_title_id\n    name\n    short_name\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"assignment_title_id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "assignment_title_id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "assignment_title_id": {
                    "nullable": false,
                    "title": "Int",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "delete_assignment_titles_by_pk": {
                      "description": "columns and relationships of \"assignment_titles\"",
                      "nullable": true,
                      "properties": {
                        "assignment_title_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "short_name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        }
                      },
                      "title": "assignment_titles",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for DELETE /api/rest/assignment_titles/{assignment_title_id}"
          }
        }
      }
    },
    "/api/rest/persons": {
      "get": {
        "summary": "persons",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery persons {\n  persons {\n    address1\n    address2\n    birth_date\n    cell_phone\n    city\n    created_timestamp\n    external_key\n    first_name\n    home_phone\n    id\n    last_name\n    middle_name\n    personal_email\n    preferred_first_name\n    state\n    status\n    updated_timestamp\n    work_email\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "persons": {
                      "items": {
                        "description": "columns and relationships of \"persons\"",
                        "nullable": false,
                        "properties": {
                          "address1": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          },
                          "address2": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          },
                          "birth_date": {
                            "$ref": "#/components/schemas/date"
                          },
                          "cell_phone": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          },
                          "city": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          },
                          "created_timestamp": {
                            "$ref": "#/components/schemas/timestamp!"
                          },
                          "external_key": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          },
                          "first_name": {
                            "nullable": false,
                            "title": "String",
                            "type": "string"
                          },
                          "home_phone": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          },
                          "id": {
                            "nullable": false,
                            "title": "Int",
                            "type": "integer"
                          },
                          "last_name": {
                            "nullable": false,
                            "title": "String",
                            "type": "string"
                          },
                          "middle_name": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          },
                          "personal_email": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          },
                          "preferred_first_name": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          },
                          "state": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          },
                          "status": {
                            "nullable": false,
                            "title": "Boolean",
                            "type": "boolean"
                          },
                          "updated_timestamp": {
                            "$ref": "#/components/schemas/timestamp!"
                          },
                          "work_email": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          }
                        },
                        "title": "persons",
                        "type": "object"
                      },
                      "nullable": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/persons"
          }
        }
      },
      "post": {
        "summary": "insert_persons_one",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation insert_persons_one($object: persons_insert_input!) {\n  insert_persons_one(object: $object) {\n    address1\n    address2\n    birth_date\n    cell_phone\n    city\n    created_timestamp\n    external_key\n    first_name\n    home_phone\n    id\n    last_name\n    middle_name\n    personal_email\n    preferred_first_name\n    state\n    status\n    updated_timestamp\n    work_email\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "object": {
                    "$ref": "#/components/schemas/persons_insert_input!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "insert_persons_one": {
                      "description": "columns and relationships of \"persons\"",
                      "nullable": true,
                      "properties": {
                        "address1": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "address2": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "birth_date": {
                          "$ref": "#/components/schemas/date"
                        },
                        "cell_phone": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "city": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "created_timestamp": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "external_key": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "first_name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "home_phone": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "last_name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "middle_name": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "personal_email": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "preferred_first_name": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "state": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "status": {
                          "nullable": false,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "updated_timestamp": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "work_email": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        }
                      },
                      "title": "persons",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/persons"
          }
        }
      }
    },
    "/api/rest/persons/{id}": {
      "get": {
        "summary": "persons_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery persons_by_pk($id: Int!) {\n  persons_by_pk(id: $id) {\n    address1\n    address2\n    birth_date\n    cell_phone\n    city\n    created_timestamp\n    external_key\n    first_name\n    home_phone\n    id\n    last_name\n    middle_name\n    personal_email\n    preferred_first_name\n    state\n    status\n    updated_timestamp\n    work_email\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "nullable": false,
                    "title": "Int",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "persons_by_pk": {
                      "description": "columns and relationships of \"persons\"",
                      "nullable": true,
                      "properties": {
                        "address1": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "address2": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "birth_date": {
                          "$ref": "#/components/schemas/date"
                        },
                        "cell_phone": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "city": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "created_timestamp": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "external_key": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "first_name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "home_phone": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "last_name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "middle_name": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "personal_email": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "preferred_first_name": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "state": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "status": {
                          "nullable": false,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "updated_timestamp": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "work_email": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        }
                      },
                      "title": "persons",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/persons/{id}"
          }
        }
      },
      "post": {
        "summary": "update_persons_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation update_persons_by_pk($id: Int!, $object: persons_set_input!) {\n  update_persons_by_pk(pk_columns: {id: $id}, _set: $object) {\n    address1\n    address2\n    birth_date\n    cell_phone\n    city\n    created_timestamp\n    external_key\n    first_name\n    home_phone\n    id\n    last_name\n    middle_name\n    personal_email\n    preferred_first_name\n    state\n    status\n    updated_timestamp\n    work_email\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "nullable": false,
                    "title": "Int",
                    "type": "integer"
                  },
                  "object": {
                    "$ref": "#/components/schemas/persons_set_input!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "update_persons_by_pk": {
                      "description": "columns and relationships of \"persons\"",
                      "nullable": true,
                      "properties": {
                        "address1": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "address2": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "birth_date": {
                          "$ref": "#/components/schemas/date"
                        },
                        "cell_phone": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "city": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "created_timestamp": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "external_key": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "first_name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "home_phone": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "last_name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "middle_name": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "personal_email": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "preferred_first_name": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "state": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "status": {
                          "nullable": false,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "updated_timestamp": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "work_email": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        }
                      },
                      "title": "persons",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/persons/{id}"
          }
        }
      },
      "delete": {
        "summary": "delete_persons_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation delete_persons_by_pk($id: Int!) {\n  delete_persons_by_pk(id: $id) {\n    address1\n    address2\n    birth_date\n    cell_phone\n    city\n    created_timestamp\n    external_key\n    first_name\n    home_phone\n    id\n    last_name\n    middle_name\n    personal_email\n    preferred_first_name\n    state\n    status\n    updated_timestamp\n    work_email\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "nullable": false,
                    "title": "Int",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "delete_persons_by_pk": {
                      "description": "columns and relationships of \"persons\"",
                      "nullable": true,
                      "properties": {
                        "address1": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "address2": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "birth_date": {
                          "$ref": "#/components/schemas/date"
                        },
                        "cell_phone": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "city": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "created_timestamp": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "external_key": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "first_name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "home_phone": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "last_name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "middle_name": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "personal_email": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "preferred_first_name": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "state": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "status": {
                          "nullable": false,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "updated_timestamp": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "work_email": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        }
                      },
                      "title": "persons",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for DELETE /api/rest/persons/{id}"
          }
        }
      }
    },
    "/api/rest/locations": {
      "get": {
        "summary": "locations",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery locations {\n  locations {\n    address1\n    address2\n    city\n    is_active\n    location_id\n    name\n    parent_location_id\n    short_name\n    state\n    zip\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "locations": {
                      "items": {
                        "description": "columns and relationships of \"locations\"",
                        "nullable": false,
                        "properties": {
                          "address1": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          },
                          "address2": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          },
                          "city": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          },
                          "is_active": {
                            "nullable": false,
                            "title": "Boolean",
                            "type": "boolean"
                          },
                          "location_id": {
                            "nullable": false,
                            "title": "Int",
                            "type": "integer"
                          },
                          "name": {
                            "nullable": false,
                            "title": "String",
                            "type": "string"
                          },
                          "parent_location_id": {
                            "nullable": true,
                            "title": "Int",
                            "type": "integer"
                          },
                          "short_name": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          },
                          "state": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          },
                          "zip": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          }
                        },
                        "title": "locations",
                        "type": "object"
                      },
                      "nullable": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/locations"
          }
        }
      },
      "post": {
        "summary": "insert_locations_one",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation insert_locations_one($object: locations_insert_input!) {\n  insert_locations_one(object: $object) {\n    address1\n    address2\n    city\n    is_active\n    location_id\n    name\n    parent_location_id\n    short_name\n    state\n    zip\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "object": {
                    "$ref": "#/components/schemas/locations_insert_input!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "insert_locations_one": {
                      "description": "columns and relationships of \"locations\"",
                      "nullable": true,
                      "properties": {
                        "address1": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "address2": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "city": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "is_active": {
                          "nullable": false,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "location_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "parent_location_id": {
                          "nullable": true,
                          "title": "Int",
                          "type": "integer"
                        },
                        "short_name": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "state": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "zip": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        }
                      },
                      "title": "locations",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/locations"
          }
        }
      }
    },
    "/api/rest/locations/{location_id}": {
      "get": {
        "summary": "locations_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery locations_by_pk($location_id: Int!) {\n  locations_by_pk(location_id: $location_id) {\n    address1\n    address2\n    city\n    is_active\n    location_id\n    name\n    parent_location_id\n    short_name\n    state\n    zip\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"location_id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "location_id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "location_id": {
                    "nullable": false,
                    "title": "Int",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "locations_by_pk": {
                      "description": "columns and relationships of \"locations\"",
                      "nullable": true,
                      "properties": {
                        "address1": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "address2": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "city": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "is_active": {
                          "nullable": false,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "location_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "parent_location_id": {
                          "nullable": true,
                          "title": "Int",
                          "type": "integer"
                        },
                        "short_name": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "state": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "zip": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        }
                      },
                      "title": "locations",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/locations/{location_id}"
          }
        }
      },
      "post": {
        "summary": "update_locations_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation update_locations_by_pk($location_id: Int!, $object: locations_set_input!) {\n  update_locations_by_pk(pk_columns: {location_id: $location_id}, _set: $object) {\n    address1\n    address2\n    city\n    is_active\n    location_id\n    name\n    parent_location_id\n    short_name\n    state\n    zip\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"location_id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "location_id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "location_id": {
                    "nullable": false,
                    "title": "Int",
                    "type": "integer"
                  },
                  "object": {
                    "$ref": "#/components/schemas/locations_set_input!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "update_locations_by_pk": {
                      "description": "columns and relationships of \"locations\"",
                      "nullable": true,
                      "properties": {
                        "address1": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "address2": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "city": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "is_active": {
                          "nullable": false,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "location_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "parent_location_id": {
                          "nullable": true,
                          "title": "Int",
                          "type": "integer"
                        },
                        "short_name": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "state": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "zip": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        }
                      },
                      "title": "locations",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/locations/{location_id}"
          }
        }
      },
      "delete": {
        "summary": "delete_locations_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation delete_locations_by_pk($location_id: Int!) {\n  delete_locations_by_pk(location_id: $location_id) {\n    address1\n    address2\n    city\n    is_active\n    location_id\n    name\n    parent_location_id\n    short_name\n    state\n    zip\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"location_id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "location_id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "location_id": {
                    "nullable": false,
                    "title": "Int",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "delete_locations_by_pk": {
                      "description": "columns and relationships of \"locations\"",
                      "nullable": true,
                      "properties": {
                        "address1": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "address2": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "city": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "is_active": {
                          "nullable": false,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "location_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "parent_location_id": {
                          "nullable": true,
                          "title": "Int",
                          "type": "integer"
                        },
                        "short_name": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "state": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "zip": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        }
                      },
                      "title": "locations",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for DELETE /api/rest/locations/{location_id}"
          }
        }
      }
    },
    "/api/rest/employees": {
      "get": {
        "summary": "employees",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery employees {\n  employees {\n    degree_type\n    employee_id\n    employee_number\n    original_hire_date\n    person_id\n    rehire_date\n    signed_network_policy\n    status_id\n    terminate_date\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "employees": {
                      "items": {
                        "description": "columns and relationships of \"employees\"",
                        "nullable": false,
                        "properties": {
                          "degree_type": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          },
                          "employee_id": {
                            "nullable": false,
                            "title": "Int",
                            "type": "integer"
                          },
                          "employee_number": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          },
                          "original_hire_date": {
                            "$ref": "#/components/schemas/date!"
                          },
                          "person_id": {
                            "nullable": false,
                            "title": "Int",
                            "type": "integer"
                          },
                          "rehire_date": {
                            "$ref": "#/components/schemas/date"
                          },
                          "signed_network_policy": {
                            "nullable": true,
                            "title": "Boolean",
                            "type": "boolean"
                          },
                          "status_id": {
                            "nullable": false,
                            "title": "Int",
                            "type": "integer"
                          },
                          "terminate_date": {
                            "$ref": "#/components/schemas/timestamp"
                          }
                        },
                        "title": "employees",
                        "type": "object"
                      },
                      "nullable": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/employees"
          }
        }
      },
      "post": {
        "summary": "insert_employees_one",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation insert_employees_one($object: employees_insert_input!) {\n  insert_employees_one(object: $object) {\n    degree_type\n    employee_id\n    employee_number\n    original_hire_date\n    person_id\n    rehire_date\n    signed_network_policy\n    status_id\n    terminate_date\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "object": {
                    "$ref": "#/components/schemas/employees_insert_input!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "insert_employees_one": {
                      "description": "columns and relationships of \"employees\"",
                      "nullable": true,
                      "properties": {
                        "degree_type": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "employee_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "employee_number": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "original_hire_date": {
                          "$ref": "#/components/schemas/date!"
                        },
                        "person_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "rehire_date": {
                          "$ref": "#/components/schemas/date"
                        },
                        "signed_network_policy": {
                          "nullable": true,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "status_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "terminate_date": {
                          "$ref": "#/components/schemas/timestamp"
                        }
                      },
                      "title": "employees",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/employees"
          }
        }
      }
    },
    "/api/rest/employees/{employee_id}": {
      "get": {
        "summary": "employees_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery employees_by_pk($employee_id: Int!) {\n  employees_by_pk(employee_id: $employee_id) {\n    degree_type\n    employee_id\n    employee_number\n    original_hire_date\n    person_id\n    rehire_date\n    signed_network_policy\n    status_id\n    terminate_date\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"employee_id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "employee_id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "employee_id": {
                    "nullable": false,
                    "title": "Int",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "employees_by_pk": {
                      "description": "columns and relationships of \"employees\"",
                      "nullable": true,
                      "properties": {
                        "degree_type": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "employee_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "employee_number": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "original_hire_date": {
                          "$ref": "#/components/schemas/date!"
                        },
                        "person_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "rehire_date": {
                          "$ref": "#/components/schemas/date"
                        },
                        "signed_network_policy": {
                          "nullable": true,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "status_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "terminate_date": {
                          "$ref": "#/components/schemas/timestamp"
                        }
                      },
                      "title": "employees",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/employees/{employee_id}"
          }
        }
      },
      "post": {
        "summary": "update_employees_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation update_employees_by_pk($employee_id: Int!, $object: employees_set_input!) {\n  update_employees_by_pk(pk_columns: {employee_id: $employee_id}, _set: $object) {\n    degree_type\n    employee_id\n    employee_number\n    original_hire_date\n    person_id\n    rehire_date\n    signed_network_policy\n    status_id\n    terminate_date\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"employee_id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "employee_id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "employee_id": {
                    "nullable": false,
                    "title": "Int",
                    "type": "integer"
                  },
                  "object": {
                    "$ref": "#/components/schemas/employees_set_input!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "update_employees_by_pk": {
                      "description": "columns and relationships of \"employees\"",
                      "nullable": true,
                      "properties": {
                        "degree_type": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "employee_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "employee_number": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "original_hire_date": {
                          "$ref": "#/components/schemas/date!"
                        },
                        "person_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "rehire_date": {
                          "$ref": "#/components/schemas/date"
                        },
                        "signed_network_policy": {
                          "nullable": true,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "status_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "terminate_date": {
                          "$ref": "#/components/schemas/timestamp"
                        }
                      },
                      "title": "employees",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/employees/{employee_id}"
          }
        }
      },
      "delete": {
        "summary": "delete_employees_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation delete_employees_by_pk($employee_id: Int!) {\n  delete_employees_by_pk(employee_id: $employee_id) {\n    degree_type\n    employee_id\n    employee_number\n    original_hire_date\n    person_id\n    rehire_date\n    signed_network_policy\n    status_id\n    terminate_date\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"employee_id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "employee_id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "employee_id": {
                    "nullable": false,
                    "title": "Int",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "delete_employees_by_pk": {
                      "description": "columns and relationships of \"employees\"",
                      "nullable": true,
                      "properties": {
                        "degree_type": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "employee_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "employee_number": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "original_hire_date": {
                          "$ref": "#/components/schemas/date!"
                        },
                        "person_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "rehire_date": {
                          "$ref": "#/components/schemas/date"
                        },
                        "signed_network_policy": {
                          "nullable": true,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "status_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "terminate_date": {
                          "$ref": "#/components/schemas/timestamp"
                        }
                      },
                      "title": "employees",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for DELETE /api/rest/employees/{employee_id}"
          }
        }
      }
    },
    "/api/rest/assignment_types": {
      "get": {
        "summary": "assignment_types",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery assignment_types {\n  assignment_types {\n    name\n    short_name\n    type_id\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "assignment_types": {
                      "items": {
                        "description": "columns and relationships of \"assignment_types\"",
                        "nullable": false,
                        "properties": {
                          "name": {
                            "nullable": false,
                            "title": "String",
                            "type": "string"
                          },
                          "short_name": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          },
                          "type_id": {
                            "nullable": false,
                            "title": "Int",
                            "type": "integer"
                          }
                        },
                        "title": "assignment_types",
                        "type": "object"
                      },
                      "nullable": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/assignment_types"
          }
        }
      },
      "post": {
        "summary": "insert_assignment_types_one",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation insert_assignment_types_one($object: assignment_types_insert_input!) {\n  insert_assignment_types_one(object: $object) {\n    name\n    short_name\n    type_id\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "object": {
                    "$ref": "#/components/schemas/assignment_types_insert_input!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "insert_assignment_types_one": {
                      "description": "columns and relationships of \"assignment_types\"",
                      "nullable": true,
                      "properties": {
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "short_name": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "type_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        }
                      },
                      "title": "assignment_types",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/assignment_types"
          }
        }
      }
    },
    "/api/rest/assignment_types/{type_id}": {
      "get": {
        "summary": "assignment_types_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery assignment_types_by_pk($type_id: Int!) {\n  assignment_types_by_pk(type_id: $type_id) {\n    name\n    short_name\n    type_id\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"type_id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "type_id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type_id": {
                    "nullable": false,
                    "title": "Int",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "assignment_types_by_pk": {
                      "description": "columns and relationships of \"assignment_types\"",
                      "nullable": true,
                      "properties": {
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "short_name": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "type_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        }
                      },
                      "title": "assignment_types",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/assignment_types/{type_id}"
          }
        }
      },
      "post": {
        "summary": "update_assignment_types_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation update_assignment_types_by_pk($type_id: Int!, $object: assignment_types_set_input!) {\n  update_assignment_types_by_pk(pk_columns: {type_id: $type_id}, _set: $object) {\n    name\n    short_name\n    type_id\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"type_id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "type_id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "object": {
                    "$ref": "#/components/schemas/assignment_types_set_input!"
                  },
                  "type_id": {
                    "nullable": false,
                    "title": "Int",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "update_assignment_types_by_pk": {
                      "description": "columns and relationships of \"assignment_types\"",
                      "nullable": true,
                      "properties": {
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "short_name": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "type_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        }
                      },
                      "title": "assignment_types",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/assignment_types/{type_id}"
          }
        }
      },
      "delete": {
        "summary": "delete_assignment_types_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation delete_assignment_types_by_pk($type_id: Int!) {\n  delete_assignment_types_by_pk(type_id: $type_id) {\n    name\n    short_name\n    type_id\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"type_id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "type_id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type_id": {
                    "nullable": false,
                    "title": "Int",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "delete_assignment_types_by_pk": {
                      "description": "columns and relationships of \"assignment_types\"",
                      "nullable": true,
                      "properties": {
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "short_name": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "type_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        }
                      },
                      "title": "assignment_types",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for DELETE /api/rest/assignment_types/{type_id}"
          }
        }
      }
    },
    "/api/rest/departments": {
      "get": {
        "summary": "departments",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery departments {\n  departments {\n    department_id\n    is_active\n    name\n    parent_department\n    short_name\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "departments": {
                      "items": {
                        "description": "columns and relationships of \"departments\"",
                        "nullable": false,
                        "properties": {
                          "department_id": {
                            "nullable": false,
                            "title": "Int",
                            "type": "integer"
                          },
                          "is_active": {
                            "nullable": false,
                            "title": "Boolean",
                            "type": "boolean"
                          },
                          "name": {
                            "nullable": false,
                            "title": "String",
                            "type": "string"
                          },
                          "parent_department": {
                            "nullable": true,
                            "title": "Int",
                            "type": "integer"
                          },
                          "short_name": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          }
                        },
                        "title": "departments",
                        "type": "object"
                      },
                      "nullable": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/departments"
          }
        }
      },
      "post": {
        "summary": "insert_departments_one",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation insert_departments_one($object: departments_insert_input!) {\n  insert_departments_one(object: $object) {\n    department_id\n    is_active\n    name\n    parent_department\n    short_name\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "object": {
                    "$ref": "#/components/schemas/departments_insert_input!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "insert_departments_one": {
                      "description": "columns and relationships of \"departments\"",
                      "nullable": true,
                      "properties": {
                        "department_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "is_active": {
                          "nullable": false,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "parent_department": {
                          "nullable": true,
                          "title": "Int",
                          "type": "integer"
                        },
                        "short_name": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        }
                      },
                      "title": "departments",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/departments"
          }
        }
      }
    },
    "/api/rest/departments/{department_id}": {
      "get": {
        "summary": "departments_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery departments_by_pk($department_id: Int!) {\n  departments_by_pk(department_id: $department_id) {\n    department_id\n    is_active\n    name\n    parent_department\n    short_name\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"department_id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "department_id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "department_id": {
                    "nullable": false,
                    "title": "Int",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "departments_by_pk": {
                      "description": "columns and relationships of \"departments\"",
                      "nullable": true,
                      "properties": {
                        "department_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "is_active": {
                          "nullable": false,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "parent_department": {
                          "nullable": true,
                          "title": "Int",
                          "type": "integer"
                        },
                        "short_name": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        }
                      },
                      "title": "departments",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/departments/{department_id}"
          }
        }
      },
      "post": {
        "summary": "update_departments_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation update_departments_by_pk($department_id: Int!, $object: departments_set_input!) {\n  update_departments_by_pk(\n    pk_columns: {department_id: $department_id}\n    _set: $object\n  ) {\n    department_id\n    is_active\n    name\n    parent_department\n    short_name\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"department_id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "department_id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "department_id": {
                    "nullable": false,
                    "title": "Int",
                    "type": "integer"
                  },
                  "object": {
                    "$ref": "#/components/schemas/departments_set_input!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "update_departments_by_pk": {
                      "description": "columns and relationships of \"departments\"",
                      "nullable": true,
                      "properties": {
                        "department_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "is_active": {
                          "nullable": false,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "parent_department": {
                          "nullable": true,
                          "title": "Int",
                          "type": "integer"
                        },
                        "short_name": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        }
                      },
                      "title": "departments",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/departments/{department_id}"
          }
        }
      },
      "delete": {
        "summary": "delete_departments_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation delete_departments_by_pk($department_id: Int!) {\n  delete_departments_by_pk(department_id: $department_id) {\n    department_id\n    is_active\n    name\n    parent_department\n    short_name\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"department_id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "department_id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "department_id": {
                    "nullable": false,
                    "title": "Int",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "delete_departments_by_pk": {
                      "description": "columns and relationships of \"departments\"",
                      "nullable": true,
                      "properties": {
                        "department_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "is_active": {
                          "nullable": false,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "parent_department": {
                          "nullable": true,
                          "title": "Int",
                          "type": "integer"
                        },
                        "short_name": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        }
                      },
                      "title": "departments",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for DELETE /api/rest/departments/{department_id}"
          }
        }
      }
    },
    "/api/rest/employee_assignments": {
      "get": {
        "summary": "employee_assignments",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery employee_assignments {\n  employee_assignments {\n    assignment_id\n    day_of_week\n    department_id\n    employee_id\n    end_date\n    fte\n    is_active\n    is_primary\n    location_id\n    manager_id\n    start_date\n    title_id\n    type_id\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "employee_assignments": {
                      "items": {
                        "description": "columns and relationships of \"employee_assignments\"",
                        "nullable": false,
                        "properties": {
                          "assignment_id": {
                            "nullable": false,
                            "title": "Int",
                            "type": "integer"
                          },
                          "day_of_week": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          },
                          "department_id": {
                            "nullable": false,
                            "title": "Int",
                            "type": "integer"
                          },
                          "employee_id": {
                            "nullable": false,
                            "title": "Int",
                            "type": "integer"
                          },
                          "end_date": {
                            "$ref": "#/components/schemas/date"
                          },
                          "fte": {
                            "$ref": "#/components/schemas/numeric"
                          },
                          "is_active": {
                            "nullable": false,
                            "title": "Boolean",
                            "type": "boolean"
                          },
                          "is_primary": {
                            "nullable": false,
                            "title": "Boolean",
                            "type": "boolean"
                          },
                          "location_id": {
                            "nullable": false,
                            "title": "Int",
                            "type": "integer"
                          },
                          "manager_id": {
                            "nullable": true,
                            "title": "Int",
                            "type": "integer"
                          },
                          "start_date": {
                            "$ref": "#/components/schemas/date!"
                          },
                          "title_id": {
                            "nullable": true,
                            "title": "Int",
                            "type": "integer"
                          },
                          "type_id": {
                            "nullable": false,
                            "title": "Int",
                            "type": "integer"
                          }
                        },
                        "title": "employee_assignments",
                        "type": "object"
                      },
                      "nullable": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/employee_assignments"
          }
        }
      },
      "post": {
        "summary": "insert_employee_assignments_one",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation insert_employee_assignments_one($object: employee_assignments_insert_input!) {\n  insert_employee_assignments_one(object: $object) {\n    assignment_id\n    day_of_week\n    department_id\n    employee_id\n    end_date\n    fte\n    is_active\n    is_primary\n    location_id\n    manager_id\n    start_date\n    title_id\n    type_id\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "object": {
                    "$ref": "#/components/schemas/employee_assignments_insert_input!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "insert_employee_assignments_one": {
                      "description": "columns and relationships of \"employee_assignments\"",
                      "nullable": true,
                      "properties": {
                        "assignment_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "day_of_week": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "department_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "employee_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "end_date": {
                          "$ref": "#/components/schemas/date"
                        },
                        "fte": {
                          "$ref": "#/components/schemas/numeric"
                        },
                        "is_active": {
                          "nullable": false,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "is_primary": {
                          "nullable": false,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "location_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "manager_id": {
                          "nullable": true,
                          "title": "Int",
                          "type": "integer"
                        },
                        "start_date": {
                          "$ref": "#/components/schemas/date!"
                        },
                        "title_id": {
                          "nullable": true,
                          "title": "Int",
                          "type": "integer"
                        },
                        "type_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        }
                      },
                      "title": "employee_assignments",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/employee_assignments"
          }
        }
      }
    },
    "/api/rest/employee_assignments/{assignment_id}": {
      "get": {
        "summary": "employee_assignments_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery employee_assignments_by_pk($assignment_id: Int!) {\n  employee_assignments_by_pk(assignment_id: $assignment_id) {\n    assignment_id\n    day_of_week\n    department_id\n    employee_id\n    end_date\n    fte\n    is_active\n    is_primary\n    location_id\n    manager_id\n    start_date\n    title_id\n    type_id\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"assignment_id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "assignment_id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "assignment_id": {
                    "nullable": false,
                    "title": "Int",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "employee_assignments_by_pk": {
                      "description": "columns and relationships of \"employee_assignments\"",
                      "nullable": true,
                      "properties": {
                        "assignment_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "day_of_week": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "department_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "employee_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "end_date": {
                          "$ref": "#/components/schemas/date"
                        },
                        "fte": {
                          "$ref": "#/components/schemas/numeric"
                        },
                        "is_active": {
                          "nullable": false,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "is_primary": {
                          "nullable": false,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "location_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "manager_id": {
                          "nullable": true,
                          "title": "Int",
                          "type": "integer"
                        },
                        "start_date": {
                          "$ref": "#/components/schemas/date!"
                        },
                        "title_id": {
                          "nullable": true,
                          "title": "Int",
                          "type": "integer"
                        },
                        "type_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        }
                      },
                      "title": "employee_assignments",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/employee_assignments/{assignment_id}"
          }
        }
      },
      "post": {
        "summary": "update_employee_assignments_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation update_employee_assignments_by_pk($assignment_id: Int!, $object: employee_assignments_set_input!) {\n  update_employee_assignments_by_pk(\n    pk_columns: {assignment_id: $assignment_id}\n    _set: $object\n  ) {\n    assignment_id\n    day_of_week\n    department_id\n    employee_id\n    end_date\n    fte\n    is_active\n    is_primary\n    location_id\n    manager_id\n    start_date\n    title_id\n    type_id\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"assignment_id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "assignment_id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "assignment_id": {
                    "nullable": false,
                    "title": "Int",
                    "type": "integer"
                  },
                  "object": {
                    "$ref": "#/components/schemas/employee_assignments_set_input!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "update_employee_assignments_by_pk": {
                      "description": "columns and relationships of \"employee_assignments\"",
                      "nullable": true,
                      "properties": {
                        "assignment_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "day_of_week": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "department_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "employee_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "end_date": {
                          "$ref": "#/components/schemas/date"
                        },
                        "fte": {
                          "$ref": "#/components/schemas/numeric"
                        },
                        "is_active": {
                          "nullable": false,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "is_primary": {
                          "nullable": false,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "location_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "manager_id": {
                          "nullable": true,
                          "title": "Int",
                          "type": "integer"
                        },
                        "start_date": {
                          "$ref": "#/components/schemas/date!"
                        },
                        "title_id": {
                          "nullable": true,
                          "title": "Int",
                          "type": "integer"
                        },
                        "type_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        }
                      },
                      "title": "employee_assignments",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/employee_assignments/{assignment_id}"
          }
        }
      },
      "delete": {
        "summary": "delete_employee_assignments_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation delete_employee_assignments_by_pk($assignment_id: Int!) {\n  delete_employee_assignments_by_pk(assignment_id: $assignment_id) {\n    assignment_id\n    day_of_week\n    department_id\n    employee_id\n    end_date\n    fte\n    is_active\n    is_primary\n    location_id\n    manager_id\n    start_date\n    title_id\n    type_id\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"assignment_id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "assignment_id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "assignment_id": {
                    "nullable": false,
                    "title": "Int",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "delete_employee_assignments_by_pk": {
                      "description": "columns and relationships of \"employee_assignments\"",
                      "nullable": true,
                      "properties": {
                        "assignment_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "day_of_week": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "department_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "employee_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "end_date": {
                          "$ref": "#/components/schemas/date"
                        },
                        "fte": {
                          "$ref": "#/components/schemas/numeric"
                        },
                        "is_active": {
                          "nullable": false,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "is_primary": {
                          "nullable": false,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "location_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "manager_id": {
                          "nullable": true,
                          "title": "Int",
                          "type": "integer"
                        },
                        "start_date": {
                          "$ref": "#/components/schemas/date!"
                        },
                        "title_id": {
                          "nullable": true,
                          "title": "Int",
                          "type": "integer"
                        },
                        "type_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        }
                      },
                      "title": "employee_assignments",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for DELETE /api/rest/employee_assignments/{assignment_id}"
          }
        }
      }
    },
    "/api/rest/employee_statuses": {
      "get": {
        "summary": "employee_statuses",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery employee_statuses {\n  employee_statuses {\n    name\n    short_name\n    status_id\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "employee_statuses": {
                      "items": {
                        "description": "columns and relationships of \"employee_statuses\"",
                        "nullable": false,
                        "properties": {
                          "name": {
                            "nullable": false,
                            "title": "String",
                            "type": "string"
                          },
                          "short_name": {
                            "nullable": false,
                            "title": "String",
                            "type": "string"
                          },
                          "status_id": {
                            "nullable": false,
                            "title": "Int",
                            "type": "integer"
                          }
                        },
                        "title": "employee_statuses",
                        "type": "object"
                      },
                      "nullable": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/employee_statuses"
          }
        }
      },
      "post": {
        "summary": "insert_employee_statuses_one",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation insert_employee_statuses_one($object: employee_statuses_insert_input!) {\n  insert_employee_statuses_one(object: $object) {\n    name\n    short_name\n    status_id\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "object": {
                    "$ref": "#/components/schemas/employee_statuses_insert_input!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "insert_employee_statuses_one": {
                      "description": "columns and relationships of \"employee_statuses\"",
                      "nullable": true,
                      "properties": {
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "short_name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "status_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        }
                      },
                      "title": "employee_statuses",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/employee_statuses"
          }
        }
      }
    },
    "/api/rest/employee_statuses/{status_id}": {
      "get": {
        "summary": "employee_statuses_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery employee_statuses_by_pk($status_id: Int!) {\n  employee_statuses_by_pk(status_id: $status_id) {\n    name\n    short_name\n    status_id\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"status_id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "status_id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "status_id": {
                    "nullable": false,
                    "title": "Int",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "employee_statuses_by_pk": {
                      "description": "columns and relationships of \"employee_statuses\"",
                      "nullable": true,
                      "properties": {
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "short_name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "status_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        }
                      },
                      "title": "employee_statuses",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/employee_statuses/{status_id}"
          }
        }
      },
      "post": {
        "summary": "update_employee_statuses_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation update_employee_statuses_by_pk($status_id: Int!, $object: employee_statuses_set_input!) {\n  update_employee_statuses_by_pk(\n    pk_columns: {status_id: $status_id}\n    _set: $object\n  ) {\n    name\n    short_name\n    status_id\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"status_id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "status_id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "object": {
                    "$ref": "#/components/schemas/employee_statuses_set_input!"
                  },
                  "status_id": {
                    "nullable": false,
                    "title": "Int",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "update_employee_statuses_by_pk": {
                      "description": "columns and relationships of \"employee_statuses\"",
                      "nullable": true,
                      "properties": {
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "short_name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "status_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        }
                      },
                      "title": "employee_statuses",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/employee_statuses/{status_id}"
          }
        }
      },
      "delete": {
        "summary": "delete_employee_statuses_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation delete_employee_statuses_by_pk($status_id: Int!) {\n  delete_employee_statuses_by_pk(status_id: $status_id) {\n    name\n    short_name\n    status_id\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"status_id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "status_id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "status_id": {
                    "nullable": false,
                    "title": "Int",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "delete_employee_statuses_by_pk": {
                      "description": "columns and relationships of \"employee_statuses\"",
                      "nullable": true,
                      "properties": {
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "short_name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "status_id": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        }
                      },
                      "title": "employee_statuses",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for DELETE /api/rest/employee_statuses/{status_id}"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "assignment_titles_insert_input!": {
        "description": "input type for inserting data into table \"assignment_titles\"",
        "nullable": false,
        "properties": {
          "assignment_title_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "short_name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          }
        },
        "title": "assignment_titles_insert_input",
        "type": "object"
      },
      "assignment_titles_set_input!": {
        "description": "input type for updating data in table \"assignment_titles\"",
        "nullable": false,
        "properties": {
          "assignment_title_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "short_name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          }
        },
        "title": "assignment_titles_set_input",
        "type": "object"
      },
      "timestamp!": {
        "nullable": false,
        "title": "timestamp"
      },
      "date": {
        "nullable": true,
        "title": "date"
      },
      "timestamp": {
        "nullable": true,
        "title": "timestamp"
      },
      "employees_constraint!": {
        "description": "unique or primary key constraints on table \"employees\"",
        "enum": [
          "employees_pkey"
        ],
        "nullable": false,
        "title": "employees_constraint"
      },
      "date!": {
        "nullable": false,
        "title": "date"
      },
      "date_comparison_exp": {
        "description": "Boolean expression to compare columns of type \"date\". All fields are combined with logical 'AND'.",
        "nullable": true,
        "properties": {
          "_eq": {
            "$ref": "#/components/schemas/date"
          },
          "_gt": {
            "$ref": "#/components/schemas/date"
          },
          "_gte": {
            "$ref": "#/components/schemas/date"
          },
          "_in": {
            "items": {
              "$ref": "#/components/schemas/date!"
            },
            "nullable": true,
            "type": "array"
          },
          "_is_null": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "_lt": {
            "$ref": "#/components/schemas/date"
          },
          "_lte": {
            "$ref": "#/components/schemas/date"
          },
          "_neq": {
            "$ref": "#/components/schemas/date"
          },
          "_nin": {
            "items": {
              "$ref": "#/components/schemas/date!"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "date_comparison_exp",
        "type": "object"
      },
      "timestamp_comparison_exp": {
        "description": "Boolean expression to compare columns of type \"timestamp\". All fields are combined with logical 'AND'.",
        "nullable": true,
        "properties": {
          "_eq": {
            "$ref": "#/components/schemas/timestamp"
          },
          "_gt": {
            "$ref": "#/components/schemas/timestamp"
          },
          "_gte": {
            "$ref": "#/components/schemas/timestamp"
          },
          "_in": {
            "items": {
              "$ref": "#/components/schemas/timestamp!"
            },
            "nullable": true,
            "type": "array"
          },
          "_is_null": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "_lt": {
            "$ref": "#/components/schemas/timestamp"
          },
          "_lte": {
            "$ref": "#/components/schemas/timestamp"
          },
          "_neq": {
            "$ref": "#/components/schemas/timestamp"
          },
          "_nin": {
            "items": {
              "$ref": "#/components/schemas/timestamp!"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "timestamp_comparison_exp",
        "type": "object"
      },
      "String_comparison_exp": {
        "description": "Boolean expression to compare columns of type \"String\". All fields are combined with logical 'AND'.",
        "nullable": true,
        "properties": {
          "_eq": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "_gt": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "_gte": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "_ilike": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "_in": {
            "items": {
              "nullable": false,
              "title": "String",
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "_iregex": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "_is_null": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "_like": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "_lt": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "_lte": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "_neq": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "_nilike": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "_nin": {
            "items": {
              "nullable": false,
              "title": "String",
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "_niregex": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "_nlike": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "_nregex": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "_nsimilar": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "_regex": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "_similar": {
            "nullable": true,
            "title": "String",
            "type": "string"
          }
        },
        "title": "String_comparison_exp",
        "type": "object"
      },
      "employees_select_column_employees_aggregate_bool_exp_bool_or_arguments_columns!": {
        "description": "select \"employees_aggregate_bool_exp_bool_or_arguments_columns\" columns of table \"employees\"",
        "enum": [
          "signed_network_policy"
        ],
        "nullable": false,
        "title": "employees_select_column_employees_aggregate_bool_exp_bool_or_arguments_columns"
      },
      "Boolean_comparison_exp!": {
        "description": "Boolean expression to compare columns of type \"Boolean\". All fields are combined with logical 'AND'.",
        "nullable": false,
        "properties": {
          "_eq": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "_gt": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "_gte": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "_in": {
            "items": {
              "nullable": false,
              "title": "Boolean",
              "type": "boolean"
            },
            "nullable": true,
            "type": "array"
          },
          "_is_null": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "_lt": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "_lte": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "_neq": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "_nin": {
            "items": {
              "nullable": false,
              "title": "Boolean",
              "type": "boolean"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Boolean_comparison_exp",
        "type": "object"
      },
      "employees_aggregate_bool_exp_bool_or": {
        "nullable": true,
        "properties": {
          "arguments": {
            "$ref": "#/components/schemas/employees_select_column_employees_aggregate_bool_exp_bool_or_arguments_columns!"
          },
          "distinct": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "filter": {
            "$ref": "#/components/schemas/employees_bool_exp"
          },
          "predicate": {
            "$ref": "#/components/schemas/Boolean_comparison_exp!"
          }
        },
        "title": "employees_aggregate_bool_exp_bool_or",
        "type": "object"
      },
      "employees_select_column_employees_aggregate_bool_exp_bool_and_arguments_columns!": {
        "description": "select \"employees_aggregate_bool_exp_bool_and_arguments_columns\" columns of table \"employees\"",
        "enum": [
          "signed_network_policy"
        ],
        "nullable": false,
        "title": "employees_select_column_employees_aggregate_bool_exp_bool_and_arguments_columns"
      },
      "employees_aggregate_bool_exp_bool_and": {
        "nullable": true,
        "properties": {
          "arguments": {
            "$ref": "#/components/schemas/employees_select_column_employees_aggregate_bool_exp_bool_and_arguments_columns!"
          },
          "distinct": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "filter": {
            "$ref": "#/components/schemas/employees_bool_exp"
          },
          "predicate": {
            "$ref": "#/components/schemas/Boolean_comparison_exp!"
          }
        },
        "title": "employees_aggregate_bool_exp_bool_and",
        "type": "object"
      },
      "employees_select_column!": {
        "description": "select columns of table \"employees\"",
        "enum": [
          "degree_type",
          "employee_id",
          "employee_number",
          "original_hire_date",
          "person_id",
          "rehire_date",
          "signed_network_policy",
          "status_id",
          "terminate_date"
        ],
        "nullable": false,
        "title": "employees_select_column"
      },
      "Int_comparison_exp!": {
        "description": "Boolean expression to compare columns of type \"Int\". All fields are combined with logical 'AND'.",
        "nullable": false,
        "properties": {
          "_eq": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "_gt": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "_gte": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "_in": {
            "items": {
              "nullable": false,
              "title": "Int",
              "type": "integer"
            },
            "nullable": true,
            "type": "array"
          },
          "_is_null": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "_lt": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "_lte": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "_neq": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "_nin": {
            "items": {
              "nullable": false,
              "title": "Int",
              "type": "integer"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Int_comparison_exp",
        "type": "object"
      },
      "employees_aggregate_bool_exp_count": {
        "nullable": true,
        "properties": {
          "arguments": {
            "items": {
              "$ref": "#/components/schemas/employees_select_column!"
            },
            "nullable": true,
            "type": "array"
          },
          "distinct": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "filter": {
            "$ref": "#/components/schemas/employees_bool_exp"
          },
          "predicate": {
            "$ref": "#/components/schemas/Int_comparison_exp!"
          }
        },
        "title": "employees_aggregate_bool_exp_count",
        "type": "object"
      },
      "employees_aggregate_bool_exp": {
        "nullable": true,
        "properties": {
          "bool_and": {
            "$ref": "#/components/schemas/employees_aggregate_bool_exp_bool_and"
          },
          "bool_or": {
            "$ref": "#/components/schemas/employees_aggregate_bool_exp_bool_or"
          },
          "count": {
            "$ref": "#/components/schemas/employees_aggregate_bool_exp_count"
          }
        },
        "title": "employees_aggregate_bool_exp",
        "type": "object"
      },
      "Int_comparison_exp": {
        "description": "Boolean expression to compare columns of type \"Int\". All fields are combined with logical 'AND'.",
        "nullable": true,
        "properties": {
          "_eq": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "_gt": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "_gte": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "_in": {
            "items": {
              "nullable": false,
              "title": "Int",
              "type": "integer"
            },
            "nullable": true,
            "type": "array"
          },
          "_is_null": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "_lt": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "_lte": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "_neq": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "_nin": {
            "items": {
              "nullable": false,
              "title": "Int",
              "type": "integer"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Int_comparison_exp",
        "type": "object"
      },
      "employee_statuses_bool_exp!": {
        "description": "Boolean expression to filter rows from the table \"employee_statuses\". All fields are combined with a logical 'AND'.",
        "nullable": false,
        "properties": {
          "_and": {
            "items": {
              "$ref": "#/components/schemas/employee_statuses_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "_not": {
            "$ref": "#/components/schemas/employee_statuses_bool_exp"
          },
          "_or": {
            "items": {
              "$ref": "#/components/schemas/employee_statuses_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "employees": {
            "$ref": "#/components/schemas/employees_bool_exp"
          },
          "employees_aggregate": {
            "$ref": "#/components/schemas/employees_aggregate_bool_exp"
          },
          "name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "short_name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "status_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          }
        },
        "title": "employee_statuses_bool_exp",
        "type": "object"
      },
      "employee_statuses_bool_exp": {
        "description": "Boolean expression to filter rows from the table \"employee_statuses\". All fields are combined with a logical 'AND'.",
        "nullable": true,
        "properties": {
          "_and": {
            "items": {
              "$ref": "#/components/schemas/employee_statuses_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "_not": {
            "$ref": "#/components/schemas/employee_statuses_bool_exp"
          },
          "_or": {
            "items": {
              "$ref": "#/components/schemas/employee_statuses_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "employees": {
            "$ref": "#/components/schemas/employees_bool_exp"
          },
          "employees_aggregate": {
            "$ref": "#/components/schemas/employees_aggregate_bool_exp"
          },
          "name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "short_name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "status_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          }
        },
        "title": "employee_statuses_bool_exp",
        "type": "object"
      },
      "Boolean_comparison_exp": {
        "description": "Boolean expression to compare columns of type \"Boolean\". All fields are combined with logical 'AND'.",
        "nullable": true,
        "properties": {
          "_eq": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "_gt": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "_gte": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "_in": {
            "items": {
              "nullable": false,
              "title": "Boolean",
              "type": "boolean"
            },
            "nullable": true,
            "type": "array"
          },
          "_is_null": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "_lt": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "_lte": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "_neq": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "_nin": {
            "items": {
              "nullable": false,
              "title": "Boolean",
              "type": "boolean"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Boolean_comparison_exp",
        "type": "object"
      },
      "employee_assignments_select_column_employee_assignments_aggregate_bool_exp_bool_or_arguments_columns!": {
        "description": "select \"employee_assignments_aggregate_bool_exp_bool_or_arguments_columns\" columns of table \"employee_assignments\"",
        "enum": [
          "is_active",
          "is_primary"
        ],
        "nullable": false,
        "title": "employee_assignments_select_column_employee_assignments_aggregate_bool_exp_bool_or_arguments_columns"
      },
      "numeric": {
        "nullable": true,
        "title": "numeric"
      },
      "numeric!": {
        "nullable": false,
        "title": "numeric"
      },
      "numeric_comparison_exp": {
        "description": "Boolean expression to compare columns of type \"numeric\". All fields are combined with logical 'AND'.",
        "nullable": true,
        "properties": {
          "_eq": {
            "$ref": "#/components/schemas/numeric"
          },
          "_gt": {
            "$ref": "#/components/schemas/numeric"
          },
          "_gte": {
            "$ref": "#/components/schemas/numeric"
          },
          "_in": {
            "items": {
              "$ref": "#/components/schemas/numeric!"
            },
            "nullable": true,
            "type": "array"
          },
          "_is_null": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "_lt": {
            "$ref": "#/components/schemas/numeric"
          },
          "_lte": {
            "$ref": "#/components/schemas/numeric"
          },
          "_neq": {
            "$ref": "#/components/schemas/numeric"
          },
          "_nin": {
            "items": {
              "$ref": "#/components/schemas/numeric!"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "numeric_comparison_exp",
        "type": "object"
      },
      "assignment_titles_bool_exp!": {
        "description": "Boolean expression to filter rows from the table \"assignment_titles\". All fields are combined with a logical 'AND'.",
        "nullable": false,
        "properties": {
          "_and": {
            "items": {
              "$ref": "#/components/schemas/assignment_titles_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "_not": {
            "$ref": "#/components/schemas/assignment_titles_bool_exp"
          },
          "_or": {
            "items": {
              "$ref": "#/components/schemas/assignment_titles_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "assignment_title_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "short_name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          }
        },
        "title": "assignment_titles_bool_exp",
        "type": "object"
      },
      "assignment_titles_bool_exp": {
        "description": "Boolean expression to filter rows from the table \"assignment_titles\". All fields are combined with a logical 'AND'.",
        "nullable": true,
        "properties": {
          "_and": {
            "items": {
              "$ref": "#/components/schemas/assignment_titles_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "_not": {
            "$ref": "#/components/schemas/assignment_titles_bool_exp"
          },
          "_or": {
            "items": {
              "$ref": "#/components/schemas/assignment_titles_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "assignment_title_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "short_name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          }
        },
        "title": "assignment_titles_bool_exp",
        "type": "object"
      },
      "departments_bool_exp!": {
        "description": "Boolean expression to filter rows from the table \"departments\". All fields are combined with a logical 'AND'.",
        "nullable": false,
        "properties": {
          "_and": {
            "items": {
              "$ref": "#/components/schemas/departments_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "_not": {
            "$ref": "#/components/schemas/departments_bool_exp"
          },
          "_or": {
            "items": {
              "$ref": "#/components/schemas/departments_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "department_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "employee_assignments": {
            "$ref": "#/components/schemas/employee_assignments_bool_exp"
          },
          "employee_assignments_aggregate": {
            "$ref": "#/components/schemas/employee_assignments_aggregate_bool_exp"
          },
          "is_active": {
            "$ref": "#/components/schemas/Boolean_comparison_exp"
          },
          "name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "parent_department": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "short_name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          }
        },
        "title": "departments_bool_exp",
        "type": "object"
      },
      "departments_bool_exp": {
        "description": "Boolean expression to filter rows from the table \"departments\". All fields are combined with a logical 'AND'.",
        "nullable": true,
        "properties": {
          "_and": {
            "items": {
              "$ref": "#/components/schemas/departments_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "_not": {
            "$ref": "#/components/schemas/departments_bool_exp"
          },
          "_or": {
            "items": {
              "$ref": "#/components/schemas/departments_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "department_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "employee_assignments": {
            "$ref": "#/components/schemas/employee_assignments_bool_exp"
          },
          "employee_assignments_aggregate": {
            "$ref": "#/components/schemas/employee_assignments_aggregate_bool_exp"
          },
          "is_active": {
            "$ref": "#/components/schemas/Boolean_comparison_exp"
          },
          "name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "parent_department": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "short_name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          }
        },
        "title": "departments_bool_exp",
        "type": "object"
      },
      "assignment_types_bool_exp!": {
        "description": "Boolean expression to filter rows from the table \"assignment_types\". All fields are combined with a logical 'AND'.",
        "nullable": false,
        "properties": {
          "_and": {
            "items": {
              "$ref": "#/components/schemas/assignment_types_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "_not": {
            "$ref": "#/components/schemas/assignment_types_bool_exp"
          },
          "_or": {
            "items": {
              "$ref": "#/components/schemas/assignment_types_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "employee_assignments": {
            "$ref": "#/components/schemas/employee_assignments_bool_exp"
          },
          "employee_assignments_aggregate": {
            "$ref": "#/components/schemas/employee_assignments_aggregate_bool_exp"
          },
          "name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "short_name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "type_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          }
        },
        "title": "assignment_types_bool_exp",
        "type": "object"
      },
      "assignment_types_bool_exp": {
        "description": "Boolean expression to filter rows from the table \"assignment_types\". All fields are combined with a logical 'AND'.",
        "nullable": true,
        "properties": {
          "_and": {
            "items": {
              "$ref": "#/components/schemas/assignment_types_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "_not": {
            "$ref": "#/components/schemas/assignment_types_bool_exp"
          },
          "_or": {
            "items": {
              "$ref": "#/components/schemas/assignment_types_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "employee_assignments": {
            "$ref": "#/components/schemas/employee_assignments_bool_exp"
          },
          "employee_assignments_aggregate": {
            "$ref": "#/components/schemas/employee_assignments_aggregate_bool_exp"
          },
          "name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "short_name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "type_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          }
        },
        "title": "assignment_types_bool_exp",
        "type": "object"
      },
      "locations_select_column_locations_aggregate_bool_exp_bool_or_arguments_columns!": {
        "description": "select \"locations_aggregate_bool_exp_bool_or_arguments_columns\" columns of table \"locations\"",
        "enum": [
          "is_active"
        ],
        "nullable": false,
        "title": "locations_select_column_locations_aggregate_bool_exp_bool_or_arguments_columns"
      },
      "locations_aggregate_bool_exp_bool_or": {
        "nullable": true,
        "properties": {
          "arguments": {
            "$ref": "#/components/schemas/locations_select_column_locations_aggregate_bool_exp_bool_or_arguments_columns!"
          },
          "distinct": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "filter": {
            "$ref": "#/components/schemas/locations_bool_exp"
          },
          "predicate": {
            "$ref": "#/components/schemas/Boolean_comparison_exp!"
          }
        },
        "title": "locations_aggregate_bool_exp_bool_or",
        "type": "object"
      },
      "locations_select_column_locations_aggregate_bool_exp_bool_and_arguments_columns!": {
        "description": "select \"locations_aggregate_bool_exp_bool_and_arguments_columns\" columns of table \"locations\"",
        "enum": [
          "is_active"
        ],
        "nullable": false,
        "title": "locations_select_column_locations_aggregate_bool_exp_bool_and_arguments_columns"
      },
      "locations_aggregate_bool_exp_bool_and": {
        "nullable": true,
        "properties": {
          "arguments": {
            "$ref": "#/components/schemas/locations_select_column_locations_aggregate_bool_exp_bool_and_arguments_columns!"
          },
          "distinct": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "filter": {
            "$ref": "#/components/schemas/locations_bool_exp"
          },
          "predicate": {
            "$ref": "#/components/schemas/Boolean_comparison_exp!"
          }
        },
        "title": "locations_aggregate_bool_exp_bool_and",
        "type": "object"
      },
      "locations_select_column!": {
        "description": "select columns of table \"locations\"",
        "enum": [
          "address1",
          "address2",
          "city",
          "is_active",
          "location_id",
          "name",
          "parent_location_id",
          "short_name",
          "state",
          "zip"
        ],
        "nullable": false,
        "title": "locations_select_column"
      },
      "locations_aggregate_bool_exp_count": {
        "nullable": true,
        "properties": {
          "arguments": {
            "items": {
              "$ref": "#/components/schemas/locations_select_column!"
            },
            "nullable": true,
            "type": "array"
          },
          "distinct": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "filter": {
            "$ref": "#/components/schemas/locations_bool_exp"
          },
          "predicate": {
            "$ref": "#/components/schemas/Int_comparison_exp!"
          }
        },
        "title": "locations_aggregate_bool_exp_count",
        "type": "object"
      },
      "locations_aggregate_bool_exp": {
        "nullable": true,
        "properties": {
          "bool_and": {
            "$ref": "#/components/schemas/locations_aggregate_bool_exp_bool_and"
          },
          "bool_or": {
            "$ref": "#/components/schemas/locations_aggregate_bool_exp_bool_or"
          },
          "count": {
            "$ref": "#/components/schemas/locations_aggregate_bool_exp_count"
          }
        },
        "title": "locations_aggregate_bool_exp",
        "type": "object"
      },
      "locations_bool_exp!": {
        "description": "Boolean expression to filter rows from the table \"locations\". All fields are combined with a logical 'AND'.",
        "nullable": false,
        "properties": {
          "_and": {
            "items": {
              "$ref": "#/components/schemas/locations_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "_not": {
            "$ref": "#/components/schemas/locations_bool_exp"
          },
          "_or": {
            "items": {
              "$ref": "#/components/schemas/locations_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "address1": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "address2": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "city": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "employee_assignments": {
            "$ref": "#/components/schemas/employee_assignments_bool_exp"
          },
          "employee_assignments_aggregate": {
            "$ref": "#/components/schemas/employee_assignments_aggregate_bool_exp"
          },
          "is_active": {
            "$ref": "#/components/schemas/Boolean_comparison_exp"
          },
          "location": {
            "$ref": "#/components/schemas/locations_bool_exp"
          },
          "location_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "locations": {
            "$ref": "#/components/schemas/locations_bool_exp"
          },
          "locations_aggregate": {
            "$ref": "#/components/schemas/locations_aggregate_bool_exp"
          },
          "name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "parent_location_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "short_name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "state": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "zip": {
            "$ref": "#/components/schemas/String_comparison_exp"
          }
        },
        "title": "locations_bool_exp",
        "type": "object"
      },
      "locations_bool_exp": {
        "description": "Boolean expression to filter rows from the table \"locations\". All fields are combined with a logical 'AND'.",
        "nullable": true,
        "properties": {
          "_and": {
            "items": {
              "$ref": "#/components/schemas/locations_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "_not": {
            "$ref": "#/components/schemas/locations_bool_exp"
          },
          "_or": {
            "items": {
              "$ref": "#/components/schemas/locations_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "address1": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "address2": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "city": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "employee_assignments": {
            "$ref": "#/components/schemas/employee_assignments_bool_exp"
          },
          "employee_assignments_aggregate": {
            "$ref": "#/components/schemas/employee_assignments_aggregate_bool_exp"
          },
          "is_active": {
            "$ref": "#/components/schemas/Boolean_comparison_exp"
          },
          "location": {
            "$ref": "#/components/schemas/locations_bool_exp"
          },
          "location_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "locations": {
            "$ref": "#/components/schemas/locations_bool_exp"
          },
          "locations_aggregate": {
            "$ref": "#/components/schemas/locations_aggregate_bool_exp"
          },
          "name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "parent_location_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "short_name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "state": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "zip": {
            "$ref": "#/components/schemas/String_comparison_exp"
          }
        },
        "title": "locations_bool_exp",
        "type": "object"
      },
      "employee_assignments_bool_exp!": {
        "description": "Boolean expression to filter rows from the table \"employee_assignments\". All fields are combined with a logical 'AND'.",
        "nullable": false,
        "properties": {
          "_and": {
            "items": {
              "$ref": "#/components/schemas/employee_assignments_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "_not": {
            "$ref": "#/components/schemas/employee_assignments_bool_exp"
          },
          "_or": {
            "items": {
              "$ref": "#/components/schemas/employee_assignments_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "assignment_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "assignment_type": {
            "$ref": "#/components/schemas/assignment_types_bool_exp"
          },
          "day_of_week": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "department": {
            "$ref": "#/components/schemas/departments_bool_exp"
          },
          "department_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "employee": {
            "$ref": "#/components/schemas/employees_bool_exp"
          },
          "employee_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "end_date": {
            "$ref": "#/components/schemas/date_comparison_exp"
          },
          "fte": {
            "$ref": "#/components/schemas/numeric_comparison_exp"
          },
          "is_active": {
            "$ref": "#/components/schemas/Boolean_comparison_exp"
          },
          "is_primary": {
            "$ref": "#/components/schemas/Boolean_comparison_exp"
          },
          "location": {
            "$ref": "#/components/schemas/locations_bool_exp"
          },
          "location_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "manager": {
            "$ref": "#/components/schemas/employees_bool_exp"
          },
          "manager_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "start_date": {
            "$ref": "#/components/schemas/date_comparison_exp"
          },
          "title": {
            "$ref": "#/components/schemas/assignment_titles_bool_exp"
          },
          "title_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "type_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          }
        },
        "title": "employee_assignments_bool_exp",
        "type": "object"
      },
      "employee_assignments_bool_exp": {
        "description": "Boolean expression to filter rows from the table \"employee_assignments\". All fields are combined with a logical 'AND'.",
        "nullable": true,
        "properties": {
          "_and": {
            "items": {
              "$ref": "#/components/schemas/employee_assignments_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "_not": {
            "$ref": "#/components/schemas/employee_assignments_bool_exp"
          },
          "_or": {
            "items": {
              "$ref": "#/components/schemas/employee_assignments_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "assignment_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "assignment_type": {
            "$ref": "#/components/schemas/assignment_types_bool_exp"
          },
          "day_of_week": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "department": {
            "$ref": "#/components/schemas/departments_bool_exp"
          },
          "department_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "employee": {
            "$ref": "#/components/schemas/employees_bool_exp"
          },
          "employee_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "end_date": {
            "$ref": "#/components/schemas/date_comparison_exp"
          },
          "fte": {
            "$ref": "#/components/schemas/numeric_comparison_exp"
          },
          "is_active": {
            "$ref": "#/components/schemas/Boolean_comparison_exp"
          },
          "is_primary": {
            "$ref": "#/components/schemas/Boolean_comparison_exp"
          },
          "location": {
            "$ref": "#/components/schemas/locations_bool_exp"
          },
          "location_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "manager": {
            "$ref": "#/components/schemas/employees_bool_exp"
          },
          "manager_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "start_date": {
            "$ref": "#/components/schemas/date_comparison_exp"
          },
          "title": {
            "$ref": "#/components/schemas/assignment_titles_bool_exp"
          },
          "title_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "type_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          }
        },
        "title": "employee_assignments_bool_exp",
        "type": "object"
      },
      "employee_assignments_aggregate_bool_exp_bool_or": {
        "nullable": true,
        "properties": {
          "arguments": {
            "$ref": "#/components/schemas/employee_assignments_select_column_employee_assignments_aggregate_bool_exp_bool_or_arguments_columns!"
          },
          "distinct": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "filter": {
            "$ref": "#/components/schemas/employee_assignments_bool_exp"
          },
          "predicate": {
            "$ref": "#/components/schemas/Boolean_comparison_exp!"
          }
        },
        "title": "employee_assignments_aggregate_bool_exp_bool_or",
        "type": "object"
      },
      "employee_assignments_select_column_employee_assignments_aggregate_bool_exp_bool_and_arguments_columns!": {
        "description": "select \"employee_assignments_aggregate_bool_exp_bool_and_arguments_columns\" columns of table \"employee_assignments\"",
        "enum": [
          "is_active",
          "is_primary"
        ],
        "nullable": false,
        "title": "employee_assignments_select_column_employee_assignments_aggregate_bool_exp_bool_and_arguments_columns"
      },
      "employee_assignments_aggregate_bool_exp_bool_and": {
        "nullable": true,
        "properties": {
          "arguments": {
            "$ref": "#/components/schemas/employee_assignments_select_column_employee_assignments_aggregate_bool_exp_bool_and_arguments_columns!"
          },
          "distinct": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "filter": {
            "$ref": "#/components/schemas/employee_assignments_bool_exp"
          },
          "predicate": {
            "$ref": "#/components/schemas/Boolean_comparison_exp!"
          }
        },
        "title": "employee_assignments_aggregate_bool_exp_bool_and",
        "type": "object"
      },
      "employee_assignments_select_column!": {
        "description": "select columns of table \"employee_assignments\"",
        "enum": [
          "assignment_id",
          "day_of_week",
          "department_id",
          "employee_id",
          "end_date",
          "fte",
          "is_active",
          "is_primary",
          "location_id",
          "manager_id",
          "start_date",
          "title_id",
          "type_id"
        ],
        "nullable": false,
        "title": "employee_assignments_select_column"
      },
      "employee_assignments_aggregate_bool_exp_count": {
        "nullable": true,
        "properties": {
          "arguments": {
            "items": {
              "$ref": "#/components/schemas/employee_assignments_select_column!"
            },
            "nullable": true,
            "type": "array"
          },
          "distinct": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "filter": {
            "$ref": "#/components/schemas/employee_assignments_bool_exp"
          },
          "predicate": {
            "$ref": "#/components/schemas/Int_comparison_exp!"
          }
        },
        "title": "employee_assignments_aggregate_bool_exp_count",
        "type": "object"
      },
      "employee_assignments_aggregate_bool_exp": {
        "nullable": true,
        "properties": {
          "bool_and": {
            "$ref": "#/components/schemas/employee_assignments_aggregate_bool_exp_bool_and"
          },
          "bool_or": {
            "$ref": "#/components/schemas/employee_assignments_aggregate_bool_exp_bool_or"
          },
          "count": {
            "$ref": "#/components/schemas/employee_assignments_aggregate_bool_exp_count"
          }
        },
        "title": "employee_assignments_aggregate_bool_exp",
        "type": "object"
      },
      "persons_bool_exp!": {
        "description": "Boolean expression to filter rows from the table \"persons\". All fields are combined with a logical 'AND'.",
        "nullable": false,
        "properties": {
          "_and": {
            "items": {
              "$ref": "#/components/schemas/persons_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "_not": {
            "$ref": "#/components/schemas/persons_bool_exp"
          },
          "_or": {
            "items": {
              "$ref": "#/components/schemas/persons_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "address1": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "address2": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "birth_date": {
            "$ref": "#/components/schemas/date_comparison_exp"
          },
          "cell_phone": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "city": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "created_timestamp": {
            "$ref": "#/components/schemas/timestamp_comparison_exp"
          },
          "employees": {
            "$ref": "#/components/schemas/employees_bool_exp"
          },
          "employees_aggregate": {
            "$ref": "#/components/schemas/employees_aggregate_bool_exp"
          },
          "external_key": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "first_name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "home_phone": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "last_name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "middle_name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "personal_email": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "preferred_first_name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "state": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "status": {
            "$ref": "#/components/schemas/Boolean_comparison_exp"
          },
          "updated_timestamp": {
            "$ref": "#/components/schemas/timestamp_comparison_exp"
          },
          "work_email": {
            "$ref": "#/components/schemas/String_comparison_exp"
          }
        },
        "title": "persons_bool_exp",
        "type": "object"
      },
      "persons_bool_exp": {
        "description": "Boolean expression to filter rows from the table \"persons\". All fields are combined with a logical 'AND'.",
        "nullable": true,
        "properties": {
          "_and": {
            "items": {
              "$ref": "#/components/schemas/persons_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "_not": {
            "$ref": "#/components/schemas/persons_bool_exp"
          },
          "_or": {
            "items": {
              "$ref": "#/components/schemas/persons_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "address1": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "address2": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "birth_date": {
            "$ref": "#/components/schemas/date_comparison_exp"
          },
          "cell_phone": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "city": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "created_timestamp": {
            "$ref": "#/components/schemas/timestamp_comparison_exp"
          },
          "employees": {
            "$ref": "#/components/schemas/employees_bool_exp"
          },
          "employees_aggregate": {
            "$ref": "#/components/schemas/employees_aggregate_bool_exp"
          },
          "external_key": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "first_name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "home_phone": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "last_name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "middle_name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "personal_email": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "preferred_first_name": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "state": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "status": {
            "$ref": "#/components/schemas/Boolean_comparison_exp"
          },
          "updated_timestamp": {
            "$ref": "#/components/schemas/timestamp_comparison_exp"
          },
          "work_email": {
            "$ref": "#/components/schemas/String_comparison_exp"
          }
        },
        "title": "persons_bool_exp",
        "type": "object"
      },
      "employees_bool_exp!": {
        "description": "Boolean expression to filter rows from the table \"employees\". All fields are combined with a logical 'AND'.",
        "nullable": false,
        "properties": {
          "_and": {
            "items": {
              "$ref": "#/components/schemas/employees_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "_not": {
            "$ref": "#/components/schemas/employees_bool_exp"
          },
          "_or": {
            "items": {
              "$ref": "#/components/schemas/employees_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "degree_type": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "employee_assignments": {
            "$ref": "#/components/schemas/employee_assignments_bool_exp"
          },
          "employee_assignments_aggregate": {
            "$ref": "#/components/schemas/employee_assignments_aggregate_bool_exp"
          },
          "employee_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "employee_number": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "employee_status": {
            "$ref": "#/components/schemas/employee_statuses_bool_exp"
          },
          "manager_assignments": {
            "$ref": "#/components/schemas/employee_assignments_bool_exp"
          },
          "manager_assignments_aggregate": {
            "$ref": "#/components/schemas/employee_assignments_aggregate_bool_exp"
          },
          "original_hire_date": {
            "$ref": "#/components/schemas/date_comparison_exp"
          },
          "person": {
            "$ref": "#/components/schemas/persons_bool_exp"
          },
          "person_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "rehire_date": {
            "$ref": "#/components/schemas/date_comparison_exp"
          },
          "signed_network_policy": {
            "$ref": "#/components/schemas/Boolean_comparison_exp"
          },
          "status_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "terminate_date": {
            "$ref": "#/components/schemas/timestamp_comparison_exp"
          }
        },
        "title": "employees_bool_exp",
        "type": "object"
      },
      "employees_bool_exp": {
        "description": "Boolean expression to filter rows from the table \"employees\". All fields are combined with a logical 'AND'.",
        "nullable": true,
        "properties": {
          "_and": {
            "items": {
              "$ref": "#/components/schemas/employees_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "_not": {
            "$ref": "#/components/schemas/employees_bool_exp"
          },
          "_or": {
            "items": {
              "$ref": "#/components/schemas/employees_bool_exp!"
            },
            "nullable": true,
            "type": "array"
          },
          "degree_type": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "employee_assignments": {
            "$ref": "#/components/schemas/employee_assignments_bool_exp"
          },
          "employee_assignments_aggregate": {
            "$ref": "#/components/schemas/employee_assignments_aggregate_bool_exp"
          },
          "employee_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "employee_number": {
            "$ref": "#/components/schemas/String_comparison_exp"
          },
          "employee_status": {
            "$ref": "#/components/schemas/employee_statuses_bool_exp"
          },
          "manager_assignments": {
            "$ref": "#/components/schemas/employee_assignments_bool_exp"
          },
          "manager_assignments_aggregate": {
            "$ref": "#/components/schemas/employee_assignments_aggregate_bool_exp"
          },
          "original_hire_date": {
            "$ref": "#/components/schemas/date_comparison_exp"
          },
          "person": {
            "$ref": "#/components/schemas/persons_bool_exp"
          },
          "person_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "rehire_date": {
            "$ref": "#/components/schemas/date_comparison_exp"
          },
          "signed_network_policy": {
            "$ref": "#/components/schemas/Boolean_comparison_exp"
          },
          "status_id": {
            "$ref": "#/components/schemas/Int_comparison_exp"
          },
          "terminate_date": {
            "$ref": "#/components/schemas/timestamp_comparison_exp"
          }
        },
        "title": "employees_bool_exp",
        "type": "object"
      },
      "employees_update_column!": {
        "description": "update columns of table \"employees\"",
        "enum": [
          "degree_type",
          "employee_id",
          "employee_number",
          "original_hire_date",
          "person_id",
          "rehire_date",
          "signed_network_policy",
          "status_id",
          "terminate_date"
        ],
        "nullable": false,
        "title": "employees_update_column"
      },
      "employees_on_conflict": {
        "description": "on_conflict condition type for table \"employees\"",
        "nullable": true,
        "properties": {
          "constraint": {
            "$ref": "#/components/schemas/employees_constraint!"
          },
          "update_columns": {
            "items": {
              "$ref": "#/components/schemas/employees_update_column!"
            },
            "nullable": false,
            "type": "array"
          },
          "where": {
            "$ref": "#/components/schemas/employees_bool_exp"
          }
        },
        "title": "employees_on_conflict",
        "type": "object"
      },
      "employee_statuses_constraint!": {
        "description": "unique or primary key constraints on table \"employee_statuses\"",
        "enum": [
          "employee_statuses_pkey"
        ],
        "nullable": false,
        "title": "employee_statuses_constraint"
      },
      "employee_statuses_update_column!": {
        "description": "update columns of table \"employee_statuses\"",
        "enum": [
          "name",
          "short_name",
          "status_id"
        ],
        "nullable": false,
        "title": "employee_statuses_update_column"
      },
      "employee_statuses_on_conflict": {
        "description": "on_conflict condition type for table \"employee_statuses\"",
        "nullable": true,
        "properties": {
          "constraint": {
            "$ref": "#/components/schemas/employee_statuses_constraint!"
          },
          "update_columns": {
            "items": {
              "$ref": "#/components/schemas/employee_statuses_update_column!"
            },
            "nullable": false,
            "type": "array"
          },
          "where": {
            "$ref": "#/components/schemas/employee_statuses_bool_exp"
          }
        },
        "title": "employee_statuses_on_conflict",
        "type": "object"
      },
      "employee_statuses_insert_input!": {
        "description": "input type for inserting data into table \"employee_statuses\"",
        "nullable": false,
        "properties": {
          "employees": {
            "$ref": "#/components/schemas/employees_arr_rel_insert_input"
          },
          "name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "short_name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "status_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          }
        },
        "title": "employee_statuses_insert_input",
        "type": "object"
      },
      "employee_statuses_obj_rel_insert_input": {
        "description": "input type for inserting object relation for remote table \"employee_statuses\"",
        "nullable": true,
        "properties": {
          "data": {
            "$ref": "#/components/schemas/employee_statuses_insert_input!"
          },
          "on_conflict": {
            "$ref": "#/components/schemas/employee_statuses_on_conflict"
          }
        },
        "title": "employee_statuses_obj_rel_insert_input",
        "type": "object"
      },
      "employee_assignments_constraint!": {
        "description": "unique or primary key constraints on table \"employee_assignments\"",
        "enum": [
          "employee_assignments_pkey"
        ],
        "nullable": false,
        "title": "employee_assignments_constraint"
      },
      "employee_assignments_update_column!": {
        "description": "update columns of table \"employee_assignments\"",
        "enum": [
          "assignment_id",
          "day_of_week",
          "department_id",
          "employee_id",
          "end_date",
          "fte",
          "is_active",
          "is_primary",
          "location_id",
          "manager_id",
          "start_date",
          "title_id",
          "type_id"
        ],
        "nullable": false,
        "title": "employee_assignments_update_column"
      },
      "employee_assignments_on_conflict": {
        "description": "on_conflict condition type for table \"employee_assignments\"",
        "nullable": true,
        "properties": {
          "constraint": {
            "$ref": "#/components/schemas/employee_assignments_constraint!"
          },
          "update_columns": {
            "items": {
              "$ref": "#/components/schemas/employee_assignments_update_column!"
            },
            "nullable": false,
            "type": "array"
          },
          "where": {
            "$ref": "#/components/schemas/employee_assignments_bool_exp"
          }
        },
        "title": "employee_assignments_on_conflict",
        "type": "object"
      },
      "employees_obj_rel_insert_input": {
        "description": "input type for inserting object relation for remote table \"employees\"",
        "nullable": true,
        "properties": {
          "data": {
            "$ref": "#/components/schemas/employees_insert_input!"
          },
          "on_conflict": {
            "$ref": "#/components/schemas/employees_on_conflict"
          }
        },
        "title": "employees_obj_rel_insert_input",
        "type": "object"
      },
      "assignment_titles_constraint!": {
        "description": "unique or primary key constraints on table \"assignment_titles\"",
        "enum": [
          "assignment_titles_pkey"
        ],
        "nullable": false,
        "title": "assignment_titles_constraint"
      },
      "assignment_titles_update_column!": {
        "description": "update columns of table \"assignment_titles\"",
        "enum": [
          "assignment_title_id",
          "name",
          "short_name"
        ],
        "nullable": false,
        "title": "assignment_titles_update_column"
      },
      "assignment_titles_on_conflict": {
        "description": "on_conflict condition type for table \"assignment_titles\"",
        "nullable": true,
        "properties": {
          "constraint": {
            "$ref": "#/components/schemas/assignment_titles_constraint!"
          },
          "update_columns": {
            "items": {
              "$ref": "#/components/schemas/assignment_titles_update_column!"
            },
            "nullable": false,
            "type": "array"
          },
          "where": {
            "$ref": "#/components/schemas/assignment_titles_bool_exp"
          }
        },
        "title": "assignment_titles_on_conflict",
        "type": "object"
      },
      "assignment_titles_obj_rel_insert_input": {
        "description": "input type for inserting object relation for remote table \"assignment_titles\"",
        "nullable": true,
        "properties": {
          "data": {
            "$ref": "#/components/schemas/assignment_titles_insert_input!"
          },
          "on_conflict": {
            "$ref": "#/components/schemas/assignment_titles_on_conflict"
          }
        },
        "title": "assignment_titles_obj_rel_insert_input",
        "type": "object"
      },
      "departments_constraint!": {
        "description": "unique or primary key constraints on table \"departments\"",
        "enum": [
          "departments_pkey"
        ],
        "nullable": false,
        "title": "departments_constraint"
      },
      "departments_update_column!": {
        "description": "update columns of table \"departments\"",
        "enum": [
          "department_id",
          "is_active",
          "name",
          "parent_department",
          "short_name"
        ],
        "nullable": false,
        "title": "departments_update_column"
      },
      "departments_on_conflict": {
        "description": "on_conflict condition type for table \"departments\"",
        "nullable": true,
        "properties": {
          "constraint": {
            "$ref": "#/components/schemas/departments_constraint!"
          },
          "update_columns": {
            "items": {
              "$ref": "#/components/schemas/departments_update_column!"
            },
            "nullable": false,
            "type": "array"
          },
          "where": {
            "$ref": "#/components/schemas/departments_bool_exp"
          }
        },
        "title": "departments_on_conflict",
        "type": "object"
      },
      "departments_insert_input!": {
        "description": "input type for inserting data into table \"departments\"",
        "nullable": false,
        "properties": {
          "department_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "employee_assignments": {
            "$ref": "#/components/schemas/employee_assignments_arr_rel_insert_input"
          },
          "is_active": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "parent_department": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "short_name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          }
        },
        "title": "departments_insert_input",
        "type": "object"
      },
      "departments_obj_rel_insert_input": {
        "description": "input type for inserting object relation for remote table \"departments\"",
        "nullable": true,
        "properties": {
          "data": {
            "$ref": "#/components/schemas/departments_insert_input!"
          },
          "on_conflict": {
            "$ref": "#/components/schemas/departments_on_conflict"
          }
        },
        "title": "departments_obj_rel_insert_input",
        "type": "object"
      },
      "assignment_types_constraint!": {
        "description": "unique or primary key constraints on table \"assignment_types\"",
        "enum": [
          "assignment_types_pkey"
        ],
        "nullable": false,
        "title": "assignment_types_constraint"
      },
      "assignment_types_update_column!": {
        "description": "update columns of table \"assignment_types\"",
        "enum": [
          "name",
          "short_name",
          "type_id"
        ],
        "nullable": false,
        "title": "assignment_types_update_column"
      },
      "assignment_types_on_conflict": {
        "description": "on_conflict condition type for table \"assignment_types\"",
        "nullable": true,
        "properties": {
          "constraint": {
            "$ref": "#/components/schemas/assignment_types_constraint!"
          },
          "update_columns": {
            "items": {
              "$ref": "#/components/schemas/assignment_types_update_column!"
            },
            "nullable": false,
            "type": "array"
          },
          "where": {
            "$ref": "#/components/schemas/assignment_types_bool_exp"
          }
        },
        "title": "assignment_types_on_conflict",
        "type": "object"
      },
      "assignment_types_insert_input!": {
        "description": "input type for inserting data into table \"assignment_types\"",
        "nullable": false,
        "properties": {
          "employee_assignments": {
            "$ref": "#/components/schemas/employee_assignments_arr_rel_insert_input"
          },
          "name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "short_name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "type_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          }
        },
        "title": "assignment_types_insert_input",
        "type": "object"
      },
      "assignment_types_obj_rel_insert_input": {
        "description": "input type for inserting object relation for remote table \"assignment_types\"",
        "nullable": true,
        "properties": {
          "data": {
            "$ref": "#/components/schemas/assignment_types_insert_input!"
          },
          "on_conflict": {
            "$ref": "#/components/schemas/assignment_types_on_conflict"
          }
        },
        "title": "assignment_types_obj_rel_insert_input",
        "type": "object"
      },
      "locations_constraint!": {
        "description": "unique or primary key constraints on table \"locations\"",
        "enum": [
          "locations_pkey"
        ],
        "nullable": false,
        "title": "locations_constraint"
      },
      "locations_update_column!": {
        "description": "update columns of table \"locations\"",
        "enum": [
          "address1",
          "address2",
          "city",
          "is_active",
          "location_id",
          "name",
          "parent_location_id",
          "short_name",
          "state",
          "zip"
        ],
        "nullable": false,
        "title": "locations_update_column"
      },
      "locations_on_conflict": {
        "description": "on_conflict condition type for table \"locations\"",
        "nullable": true,
        "properties": {
          "constraint": {
            "$ref": "#/components/schemas/locations_constraint!"
          },
          "update_columns": {
            "items": {
              "$ref": "#/components/schemas/locations_update_column!"
            },
            "nullable": false,
            "type": "array"
          },
          "where": {
            "$ref": "#/components/schemas/locations_bool_exp"
          }
        },
        "title": "locations_on_conflict",
        "type": "object"
      },
      "locations_arr_rel_insert_input": {
        "description": "input type for inserting array relation for remote table \"locations\"",
        "nullable": true,
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/locations_insert_input!"
            },
            "nullable": false,
            "type": "array"
          },
          "on_conflict": {
            "$ref": "#/components/schemas/locations_on_conflict"
          }
        },
        "title": "locations_arr_rel_insert_input",
        "type": "object"
      },
      "locations_insert_input!": {
        "description": "input type for inserting data into table \"locations\"",
        "nullable": false,
        "properties": {
          "address1": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "address2": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "city": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "employee_assignments": {
            "$ref": "#/components/schemas/employee_assignments_arr_rel_insert_input"
          },
          "is_active": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "location": {
            "$ref": "#/components/schemas/locations_obj_rel_insert_input"
          },
          "location_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "locations": {
            "$ref": "#/components/schemas/locations_arr_rel_insert_input"
          },
          "name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "parent_location_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "short_name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "state": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "zip": {
            "nullable": true,
            "title": "String",
            "type": "string"
          }
        },
        "title": "locations_insert_input",
        "type": "object"
      },
      "locations_obj_rel_insert_input": {
        "description": "input type for inserting object relation for remote table \"locations\"",
        "nullable": true,
        "properties": {
          "data": {
            "$ref": "#/components/schemas/locations_insert_input!"
          },
          "on_conflict": {
            "$ref": "#/components/schemas/locations_on_conflict"
          }
        },
        "title": "locations_obj_rel_insert_input",
        "type": "object"
      },
      "employee_assignments_insert_input!": {
        "description": "input type for inserting data into table \"employee_assignments\"",
        "nullable": false,
        "properties": {
          "assignment_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "assignment_type": {
            "$ref": "#/components/schemas/assignment_types_obj_rel_insert_input"
          },
          "day_of_week": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "department": {
            "$ref": "#/components/schemas/departments_obj_rel_insert_input"
          },
          "department_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "employee": {
            "$ref": "#/components/schemas/employees_obj_rel_insert_input"
          },
          "employee_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "end_date": {
            "$ref": "#/components/schemas/date"
          },
          "fte": {
            "$ref": "#/components/schemas/numeric"
          },
          "is_active": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "is_primary": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "location": {
            "$ref": "#/components/schemas/locations_obj_rel_insert_input"
          },
          "location_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "manager": {
            "$ref": "#/components/schemas/employees_obj_rel_insert_input"
          },
          "manager_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "start_date": {
            "$ref": "#/components/schemas/date"
          },
          "title": {
            "$ref": "#/components/schemas/assignment_titles_obj_rel_insert_input"
          },
          "title_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "type_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          }
        },
        "title": "employee_assignments_insert_input",
        "type": "object"
      },
      "employee_assignments_arr_rel_insert_input": {
        "description": "input type for inserting array relation for remote table \"employee_assignments\"",
        "nullable": true,
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/employee_assignments_insert_input!"
            },
            "nullable": false,
            "type": "array"
          },
          "on_conflict": {
            "$ref": "#/components/schemas/employee_assignments_on_conflict"
          }
        },
        "title": "employee_assignments_arr_rel_insert_input",
        "type": "object"
      },
      "persons_constraint!": {
        "description": "unique or primary key constraints on table \"persons\"",
        "enum": [
          "persons_pkey"
        ],
        "nullable": false,
        "title": "persons_constraint"
      },
      "persons_update_column!": {
        "description": "update columns of table \"persons\"",
        "enum": [
          "address1",
          "address2",
          "birth_date",
          "cell_phone",
          "city",
          "created_timestamp",
          "external_key",
          "first_name",
          "home_phone",
          "id",
          "last_name",
          "middle_name",
          "personal_email",
          "preferred_first_name",
          "state",
          "status",
          "updated_timestamp",
          "work_email"
        ],
        "nullable": false,
        "title": "persons_update_column"
      },
      "persons_on_conflict": {
        "description": "on_conflict condition type for table \"persons\"",
        "nullable": true,
        "properties": {
          "constraint": {
            "$ref": "#/components/schemas/persons_constraint!"
          },
          "update_columns": {
            "items": {
              "$ref": "#/components/schemas/persons_update_column!"
            },
            "nullable": false,
            "type": "array"
          },
          "where": {
            "$ref": "#/components/schemas/persons_bool_exp"
          }
        },
        "title": "persons_on_conflict",
        "type": "object"
      },
      "persons_obj_rel_insert_input": {
        "description": "input type for inserting object relation for remote table \"persons\"",
        "nullable": true,
        "properties": {
          "data": {
            "$ref": "#/components/schemas/persons_insert_input!"
          },
          "on_conflict": {
            "$ref": "#/components/schemas/persons_on_conflict"
          }
        },
        "title": "persons_obj_rel_insert_input",
        "type": "object"
      },
      "employees_insert_input!": {
        "description": "input type for inserting data into table \"employees\"",
        "nullable": false,
        "properties": {
          "degree_type": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "employee_assignments": {
            "$ref": "#/components/schemas/employee_assignments_arr_rel_insert_input"
          },
          "employee_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "employee_number": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "employee_status": {
            "$ref": "#/components/schemas/employee_statuses_obj_rel_insert_input"
          },
          "manager_assignments": {
            "$ref": "#/components/schemas/employee_assignments_arr_rel_insert_input"
          },
          "original_hire_date": {
            "$ref": "#/components/schemas/date"
          },
          "person": {
            "$ref": "#/components/schemas/persons_obj_rel_insert_input"
          },
          "person_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "rehire_date": {
            "$ref": "#/components/schemas/date"
          },
          "signed_network_policy": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "status_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "terminate_date": {
            "$ref": "#/components/schemas/timestamp"
          }
        },
        "title": "employees_insert_input",
        "type": "object"
      },
      "employees_arr_rel_insert_input": {
        "description": "input type for inserting array relation for remote table \"employees\"",
        "nullable": true,
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/employees_insert_input!"
            },
            "nullable": false,
            "type": "array"
          },
          "on_conflict": {
            "$ref": "#/components/schemas/employees_on_conflict"
          }
        },
        "title": "employees_arr_rel_insert_input",
        "type": "object"
      },
      "persons_insert_input!": {
        "description": "input type for inserting data into table \"persons\"",
        "nullable": false,
        "properties": {
          "address1": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "address2": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "birth_date": {
            "$ref": "#/components/schemas/date"
          },
          "cell_phone": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "city": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "created_timestamp": {
            "$ref": "#/components/schemas/timestamp"
          },
          "employees": {
            "$ref": "#/components/schemas/employees_arr_rel_insert_input"
          },
          "external_key": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "first_name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "home_phone": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "last_name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "middle_name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "personal_email": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "preferred_first_name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "state": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "status": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "updated_timestamp": {
            "$ref": "#/components/schemas/timestamp"
          },
          "work_email": {
            "nullable": true,
            "title": "String",
            "type": "string"
          }
        },
        "title": "persons_insert_input",
        "type": "object"
      },
      "persons_set_input!": {
        "description": "input type for updating data in table \"persons\"",
        "nullable": false,
        "properties": {
          "address1": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "address2": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "birth_date": {
            "$ref": "#/components/schemas/date"
          },
          "cell_phone": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "city": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "created_timestamp": {
            "$ref": "#/components/schemas/timestamp"
          },
          "external_key": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "first_name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "home_phone": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "last_name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "middle_name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "personal_email": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "preferred_first_name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "state": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "status": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "updated_timestamp": {
            "$ref": "#/components/schemas/timestamp"
          },
          "work_email": {
            "nullable": true,
            "title": "String",
            "type": "string"
          }
        },
        "title": "persons_set_input",
        "type": "object"
      },
      "locations_set_input!": {
        "description": "input type for updating data in table \"locations\"",
        "nullable": false,
        "properties": {
          "address1": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "address2": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "city": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "is_active": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "location_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "parent_location_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "short_name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "state": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "zip": {
            "nullable": true,
            "title": "String",
            "type": "string"
          }
        },
        "title": "locations_set_input",
        "type": "object"
      },
      "employees_set_input!": {
        "description": "input type for updating data in table \"employees\"",
        "nullable": false,
        "properties": {
          "degree_type": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "employee_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "employee_number": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "original_hire_date": {
            "$ref": "#/components/schemas/date"
          },
          "person_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "rehire_date": {
            "$ref": "#/components/schemas/date"
          },
          "signed_network_policy": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "status_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "terminate_date": {
            "$ref": "#/components/schemas/timestamp"
          }
        },
        "title": "employees_set_input",
        "type": "object"
      },
      "assignment_types_set_input!": {
        "description": "input type for updating data in table \"assignment_types\"",
        "nullable": false,
        "properties": {
          "name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "short_name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "type_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          }
        },
        "title": "assignment_types_set_input",
        "type": "object"
      },
      "departments_set_input!": {
        "description": "input type for updating data in table \"departments\"",
        "nullable": false,
        "properties": {
          "department_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "is_active": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "parent_department": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "short_name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          }
        },
        "title": "departments_set_input",
        "type": "object"
      },
      "employee_assignments_set_input!": {
        "description": "input type for updating data in table \"employee_assignments\"",
        "nullable": false,
        "properties": {
          "assignment_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "day_of_week": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "department_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "employee_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "end_date": {
            "$ref": "#/components/schemas/date"
          },
          "fte": {
            "$ref": "#/components/schemas/numeric"
          },
          "is_active": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "is_primary": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "location_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "manager_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "start_date": {
            "$ref": "#/components/schemas/date"
          },
          "title_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          },
          "type_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          }
        },
        "title": "employee_assignments_set_input",
        "type": "object"
      },
      "employee_statuses_set_input!": {
        "description": "input type for updating data in table \"employee_statuses\"",
        "nullable": false,
        "properties": {
          "name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "short_name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "status_id": {
            "nullable": true,
            "title": "Int",
            "type": "integer"
          }
        },
        "title": "employee_statuses_set_input",
        "type": "object"
      }
    }
  },
  "openapi": "3.0.0"
}